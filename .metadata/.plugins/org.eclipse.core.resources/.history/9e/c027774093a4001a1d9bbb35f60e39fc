package com.ibm.ms1.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.ibm.ms1.dto.ConversionDTO;
import com.ibm.ms1.service.MS1Service;

@RefreshScope
@RestController
public class MS1Controller {
	
	@Autowired
	MS1Service ms1Service;
	
//	@ApiOperation("This will provide products for given product ID.")
//	@GetMapping("product/{id}")
//	public ResponseEntity<ProductDTO> searchByProductID(@PathVariable(value="id") Long id) {
//		
//					
//		return ResponseEntity.ok().body(productService.getProductById(id));
//		
//	}
//	
//	@PostMapping("product/create")
//	public ResponseEntity<ProductDTO> createProduct(@RequestBody ProductDTO productDTO) {
//		
//		ProductDTO dto=productService.createProduct(productDTO);
//		return ResponseEntity.ok().body(dto);
//	}
//	
//	@DeleteMapping("product/{id}")
//	public ResponseEntity<?> deleteProduct(@PathVariable(value="id") Long id){
//		
//		productService.deleteProduct(id);
//		
//		return ResponseEntity.noContent().build();
//	}
//	
//	@ApiOperation("This will provide products for given product name.")
//	@GetMapping("product")
//	public ResponseEntity<ProductDTO> searchByProductName(@RequestParam(value="name") String name) {
//		
//					
//		return ResponseEntity.ok().body(productService.getProductByName(name));
//		
//	}
	
	
	@PostMapping("addConversionFactor")
	public ResponseEntity<ConversionDTO> addConversionFactor(@RequestBody ConversionDTO conversionDTO) {
		return ResponseEntity.ok().body(ms1Service.addFactor(conversionDTO));
	}
	

	@GetMapping("getConversionFactor/{countryCode}")
	public ResponseEntity<ConversionDTO> getConversionFactor(@PathVariable(value="countryCode") String countryCode) {
		
					
		return ResponseEntity.ok().body(ms1Service.getDetails(countryCode));
		
	}
	
	
	@PutMapping("updateConversionFactor")
	public ResponseEntity<ConversionDTO> updateConversinFactor(@RequestBody ConversionDTO conversionDTO){
		
		return ResponseEntity.ok().body(ms1Service.updateDetails(conversionDTO));
	}
	
}
