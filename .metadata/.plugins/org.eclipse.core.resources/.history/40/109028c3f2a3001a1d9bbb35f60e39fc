package com.ibm.productservice.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ibm.ms1.domain.Conversion;
import com.ibm.ms1.dto.ConversionDTO;
import com.ibm.ms1.dto.ConversionMApper;
import com.ibm.productservice.repository.MS1Repository;

@Service
public class MS1Service {

//	@Autowired
//	ProductRepository productRepository;
	
	@Autowired 
	MS1Repository repo;

//	final RestClient restClient;
//	
//	@Autowired
//	public ProductService(RestClient restClient) {
//		this.restClient=restClient;
//	}

//	public ProductDTO getProductById(Long id) {
//		Optional<Product> product = productRepository.findById(id);
//		ProductDTO productDTO = null;
//		if (product.isPresent()) {
//
//			ProductMapper mapper = new ProductMapper();
//			productDTO = mapper.convertProductToProductDTO(product.get());
////			 Long tax= restClient.getTax(productDTO.getProductName());
////			 productDTO.setTax(tax);
//		}
//
//		return productDTO;
//	}
//
//	public ProductDTO createProduct(ProductDTO dto) {
//
//		ProductMapper mapper = new ProductMapper();
//		Product product = mapper.convertProductDTOToProduct(dto);
//
//		Product product1 = productRepository.save(product);
//		return mapper.convertProductToProductDTO(product1);
//
//	}
//
//	public void deleteProduct(Long id) {
//		productRepository.delete(productRepository.findById(id).get());
//
//	}
//
//	public ProductDTO getProductByName(String name) {
//		Product product = productRepository.findByProductName(name);
//		ProductMapper mapper = new ProductMapper();
//		return mapper.convertProductToProductDTO(product);
//
//	}

	public ConversionDTO addFactor(ConversionDTO dto) {
		// TODO Auto-generated method stub

		ConversionMApper mapper = new ConversionMApper();
		Conversion conversion = mapper.convertConversionDTOToConversion(dto);

		Conversion convert = repo.save(conversion);
		return mapper.convertConversionToConversionDTO(convert);

	}

	public ConversionDTO getDetails(String countryCode) {
		// TODO Auto-generated method stub

		Conversion conversion = repo.findByCountryCode(countryCode);

			ConversionMApper mapper = new ConversionMApper();
			return  mapper.convertConversionToConversionDTO(conversion);
//			 Long tax= restClient.getTax(productDTO.getProductName());
//			 productDTO.setTax(tax);

	}

	public ConversionDTO updateDetails(ConversionDTO conversionDTO) {
		// TODO Auto-generated method stub
		
		Conversion conversion = repo.findByCountryCode(conversionDTO.getCountryCode());
		ConversionDTO dto = null;
		if (!(conversion == null)) {
			
			ConversionMApper mapper = new ConversionMApper();
			Conversion conversionMap = mapper.convertConversionDTOToConversion(dto);

			Conversion convert = repo.save(conversionMap);
			dto= mapper.convertConversionToConversionDTO(convert);
		}

		return dto;
	
	}
}
